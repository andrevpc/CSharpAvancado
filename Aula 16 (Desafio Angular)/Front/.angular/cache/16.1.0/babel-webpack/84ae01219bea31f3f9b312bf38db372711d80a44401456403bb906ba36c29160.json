{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction PasswordComponent_br_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"br\");\n  }\n}\nfunction PasswordComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p\")(1, \"input\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function PasswordComponent_p_6_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.seePassword = $event);\n    })(\"change\", function PasswordComponent_p_6_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.checkBoxToogle($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵtext(3, \"Mostrar Senha\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.seePassword);\n  }\n}\nexport class PasswordComponent {}\nPasswordComponent.ɵfac = function PasswordComponent_Factory(t) {\n  return new (t || PasswordComponent)();\n};\nPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PasswordComponent,\n  selectors: [[\"app-password\"]],\n  decls: 7,\n  vars: 6,\n  consts: [[4, \"ngIf\"], [3, \"type\", \"ngModel\", \"focusout\", \"ngModelChange\", \"keydown\", \"change\", \"click\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\", \"change\"]],\n  template: function PasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"p\")(2, \"label\");\n      i0.ɵɵtext(3, \"Senha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, PasswordComponent_br_4_Template, 1, 0, \"br\", 0);\n      i0.ɵɵelementStart(5, \"input\", 1);\n      i0.ɵɵlistener(\"focusout\", function PasswordComponent_Template_input_focusout_5_listener() {\n        return ctx.passwordFocusout();\n      })(\"ngModelChange\", function PasswordComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.inputText = $event;\n      })(\"keydown\", function PasswordComponent_Template_input_keydown_5_listener() {\n        return ctx.passwordChanged();\n      })(\"change\", function PasswordComponent_Template_input_change_5_listener() {\n        return ctx.passwordChanged();\n      })(\"click\", function PasswordComponent_Template_input_click_5_listener() {\n        return ctx.passwordClick();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, PasswordComponent_p_6_Template, 4, 1, \"p\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.breakLineOnInput);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleMap(ctx.inputStyle);\n      i0.ɵɵpropertyInterpolate(\"type\", ctx.inputType);\n      i0.ɵɵproperty(\"ngModel\", ctx.inputText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.canSeePassword);\n    }\n  },\n  dependencies: [i1.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","PasswordComponent_p_6_Template_input_ngModelChange_1_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","seePassword","PasswordComponent_p_6_Template_input_change_1_listener","ctx_r4","checkBoxToogle","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ctx_r1","PasswordComponent","selectors","decls","vars","consts","template","PasswordComponent_Template","rf","ctx","ɵɵtemplate","PasswordComponent_br_4_Template","PasswordComponent_Template_input_focusout_5_listener","passwordFocusout","PasswordComponent_Template_input_ngModelChange_5_listener","inputText","PasswordComponent_Template_input_keydown_5_listener","passwordChanged","PasswordComponent_Template_input_change_5_listener","PasswordComponent_Template_input_click_5_listener","passwordClick","PasswordComponent_p_6_Template","breakLineOnInput","ɵɵstyleMap","inputStyle","ɵɵpropertyInterpolate","inputType","canSeePassword"],"sources":["C:\\Users\\disrct\\Desktop\\André\\CSharpAvancado\\Aula 16 (Desafio Angular)\\Front\\src\\app\\password\\password.component.ts","C:\\Users\\disrct\\Desktop\\André\\CSharpAvancado\\Aula 16 (Desafio Angular)\\Front\\src\\app\\password\\password.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.css']\n})\nexport class PasswordComponent {\n\n}\n","<div>\n    <p>\n        <label>Senha</label>\n        <br *ngIf=\"breakLineOnInput\">\n        <!--\n    ngModel permite que façamos um two-way bind. Isso é, ao alterar uma variável\n    na classe alteramos na tela e ao alterarmos na tela (por meio da ação do usuário)\n    alteramos na classe também\n    Outro fator importante é que chamamos eventos como click e change ao invés de onclick ou onchange.\n    <input type={{inputType}}> é, em geral equivalente a <input [type]=\"inputType\">\n    -->\n        <input type={{inputType}} [style]=inputStyle (focusout)=\"passwordFocusout()\" [(ngModel)]=\"inputText\"\n            (keydown)=\"passwordChanged()\" (change)=\"passwordChanged()\" (click)=\"passwordClick()\">\n    </p>\n    <!-- Este p e tudo que está dentro dele só aparecerá na tela se canSeePassword for verdadeiro -->\n    <p *ngIf=\"canSeePassword\">\n        <!--\n    Porquê não usar click aqui? Bem, o evento click é chamado antes que o Model seja atualizado.\n    Assim seePassword apresentará o valor incorreto!\n    -->\n        <input type=\"checkbox\" [(ngModel)]=\"seePassword\" (change)=\"checkBoxToogle($event)\">\n        <label>Mostrar Senha</label>\n    </p>\n</div>"],"mappings":";;;;ICGQA,EAAA,CAAAC,SAAA,SAA6B;;;;;;IAYjCD,EAAA,CAAAE,cAAA,QAA0B;IAKCF,EAAA,CAAAG,UAAA,2BAAAC,8DAAAC,MAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAR,EAAA,CAAAS,aAAA;MAAA,OAAAT,EAAA,CAAAU,WAAA,CAAAF,MAAA,CAAAG,WAAA,GAAAN,MAAA;IAAA,EAAyB,oBAAAO,uDAAAP,MAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAM,MAAA,GAAAb,EAAA,CAAAS,aAAA;MAAA,OAAWT,EAAA,CAAAU,WAAA,CAAAG,MAAA,CAAAC,cAAA,CAAAT,MAAA,CAAsB;IAAA,EAAjC;IAAhDL,EAAA,CAAAe,YAAA,EAAmF;IACnFf,EAAA,CAAAE,cAAA,YAAO;IAAAF,EAAA,CAAAgB,MAAA,oBAAa;IAAAhB,EAAA,CAAAe,YAAA,EAAQ;;;;IADLf,EAAA,CAAAiB,SAAA,GAAyB;IAAzBjB,EAAA,CAAAkB,UAAA,YAAAC,MAAA,CAAAR,WAAA,CAAyB;;;ADbxD,OAAM,MAAOS,iBAAiB;AAAjBA,iBAAiB,C;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB,C;QAAjBA,iBAAiB;EAAAC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCP9B3B,EAAA,CAAAE,cAAA,UAAK;MAEUF,EAAA,CAAAgB,MAAA,YAAK;MAAAhB,EAAA,CAAAe,YAAA,EAAQ;MACpBf,EAAA,CAAA6B,UAAA,IAAAC,+BAAA,gBAA6B;MAQ7B9B,EAAA,CAAAE,cAAA,eACyF;MAD5CF,EAAA,CAAAG,UAAA,sBAAA4B,qDAAA;QAAA,OAAYH,GAAA,CAAAI,gBAAA,EAAkB;MAAA,EAAC,2BAAAC,0DAAA5B,MAAA;QAAA,OAAAuB,GAAA,CAAAM,SAAA,GAAA7B,MAAA;MAAA,uBAAA8B,oDAAA;QAAA,OAC7DP,GAAA,CAAAQ,eAAA,EAAiB;MAAA,EAD4C,oBAAAC,mDAAA;QAAA,OAChCT,GAAA,CAAAQ,eAAA,EAAiB;MAAA,EADe,mBAAAE,kDAAA;QAAA,OACJV,GAAA,CAAAW,aAAA,EAAe;MAAA,EADX;MAA5EvC,EAAA,CAAAe,YAAA,EACyF;MAG7Ff,EAAA,CAAA6B,UAAA,IAAAW,8BAAA,eAOI;MACRxC,EAAA,CAAAe,YAAA,EAAM;;;MApBOf,EAAA,CAAAiB,SAAA,GAAsB;MAAtBjB,EAAA,CAAAkB,UAAA,SAAAU,GAAA,CAAAa,gBAAA,CAAsB;MAQDzC,EAAA,CAAAiB,SAAA,GAAkB;MAAlBjB,EAAA,CAAA0C,UAAA,CAAAd,GAAA,CAAAe,UAAA,CAAkB;MAArC3C,EAAA,CAAA4C,qBAAA,SAAAhB,GAAA,CAAAiB,SAAA,CAAkB;MAAoD7C,EAAA,CAAAkB,UAAA,YAAAU,GAAA,CAAAM,SAAA,CAAuB;MAIpGlC,EAAA,CAAAiB,SAAA,GAAoB;MAApBjB,EAAA,CAAAkB,UAAA,SAAAU,GAAA,CAAAkB,cAAA,CAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}