{"ast":null,"code":"import { FormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgIf } from '@angular/common';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nfunction UserNamePassWordComponent_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getErrorMessage());\n  }\n}\nexport class UserNamePassWordComponent {\n  constructor() {\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n  }\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'You must enter a value';\n    }\n    return this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n}\nUserNamePassWordComponent.ɵfac = function UserNamePassWordComponent_Factory(t) {\n  return new (t || UserNamePassWordComponent)();\n};\nUserNamePassWordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserNamePassWordComponent,\n  selectors: [[\"app-user-name-pass-word\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 22,\n  vars: 6,\n  consts: [[1, \"example-container\"], [\"matInput\", \"\", \"placeholder\", \"pat@example.com\", \"required\", \"\", 3, \"formControl\"], [4, \"ngIf\"], [\"matInput\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"floatLabel\", \"always\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"0\", 1, \"example-right-align\"], [\"matTextPrefix\", \"\"], [\"matTextSuffix\", \"\"]],\n  template: function UserNamePassWordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-form-field\")(2, \"mat-label\");\n      i0.ɵɵtext(3, \"Enter your email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 1);\n      i0.ɵɵtemplate(5, UserNamePassWordComponent_mat_error_5_Template, 2, 1, \"mat-error\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 0)(7, \"mat-form-field\")(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Enter your password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 3);\n      i0.ɵɵelementStart(11, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function UserNamePassWordComponent_Template_button_click_11_listener() {\n        return ctx.hide = !ctx.hide;\n      });\n      i0.ɵɵelementStart(12, \"mat-icon\");\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"mat-form-field\", 5)(15, \"mat-label\");\n      i0.ɵɵtext(16, \"Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 6);\n      i0.ɵɵelementStart(18, \"span\", 7);\n      i0.ɵɵtext(19, \"$\\u00A0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"span\", 8);\n      i0.ɵɵtext(21, \".00\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControl\", ctx.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.email.invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n    }\n  },\n  dependencies: [MatFormFieldModule, i1.MatFormField, i1.MatLabel, i1.MatError, i1.MatPrefix, i1.MatSuffix, MatInputModule, i2.MatInput, FormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.RequiredValidator, ReactiveFormsModule, i3.FormControlDirective, NgIf, MatButtonModule, i4.MatIconButton, MatIconModule, i5.MatIcon],\n  styles: [\".example-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] + mat-form-field[_ngcontent-%COMP%] {\\n    margin-left: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci1uYW1lLXBhc3Mtd29yZC91c2VyLW5hbWUtcGFzcy13b3JkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7QUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIgbWF0LWZvcm0tZmllbGQrbWF0LWZvcm0tZmllbGQge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDhweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["FormControl","Validators","FormsModule","ReactiveFormsModule","NgIf","MatInputModule","MatFormFieldModule","MatIconModule","MatButtonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","getErrorMessage","UserNamePassWordComponent","constructor","email","required","hasError","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","UserNamePassWordComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","UserNamePassWordComponent_mat_error_5_Template","ɵɵlistener","UserNamePassWordComponent_Template_button_click_11_listener","hide","ɵɵproperty","invalid","ɵɵattribute","i1","MatFormField","MatLabel","MatError","MatPrefix","MatSuffix","i2","MatInput","i3","DefaultValueAccessor","NgControlStatus","RequiredValidator","FormControlDirective","i4","MatIconButton","i5","MatIcon","styles"],"sources":["C:\\Users\\disrct\\Desktop\\André\\CSharpAvancado\\Aula 16 (Desafio Angular)\\Front\\src\\app\\user-name-pass-word\\user-name-pass-word.component.ts","C:\\Users\\disrct\\Desktop\\André\\CSharpAvancado\\Aula 16 (Desafio Angular)\\Front\\src\\app\\user-name-pass-word\\user-name-pass-word.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgIf } from '@angular/common';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\n\n@Component({\n  selector: 'app-user-name-pass-word',\n  templateUrl: './user-name-pass-word.component.html',\n  styleUrls: ['./user-name-pass-word.component.css'],\n  standalone: true,\n  imports: [MatFormFieldModule, MatInputModule, FormsModule, ReactiveFormsModule, NgIf, MatButtonModule, MatIconModule],\n})\nexport class UserNamePassWordComponent {\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'You must enter a value';\n    }\n\n    return this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n}\n","<div class=\"example-container\">\n    <mat-form-field>\n      <mat-label>Enter your email</mat-label>\n      <input matInput placeholder=\"pat@example.com\" [formControl]=\"email\" required>\n      <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n    </mat-form-field>\n  </div>\n\n<div class=\"example-container\">\n    <mat-form-field>\n      <mat-label>Enter your password</mat-label>\n      <input matInput [type]=\"hide ? 'password' : 'text'\">\n      <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n      </button>\n    </mat-form-field>\n  \n    <mat-form-field floatLabel=\"always\">\n      <mat-label>Amount</mat-label>\n      <input matInput type=\"number\" class=\"example-right-align\" placeholder=\"0\">\n      <span matTextPrefix>$&nbsp;</span>\n      <span matTextSuffix>.00</span>\n    </mat-form-field>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}