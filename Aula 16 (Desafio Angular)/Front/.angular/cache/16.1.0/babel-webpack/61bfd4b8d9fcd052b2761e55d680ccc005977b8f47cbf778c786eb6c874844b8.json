{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nexport let PasswordComponent = class PasswordComponent {\n  constructor() {\n    this.valueChanged = new EventEmitter();\n    this.breakLineOnInput = true;\n    this.canSeePassword = true;\n    this.seePassword = false;\n    this.seePasswordChanged = new EventEmitter();\n    this.inputType = \"text\";\n    this.inputStyle = \"color: black;\";\n    this.inputText = \"\";\n    this.initialState = true;\n  }\n  ngOnInit() {\n    this.updateInput();\n  }\n  checkBoxToogle(newValue) {\n    this.updateInput();\n    this.seePasswordChanged.emit(this.seePassword);\n  }\n  updateInput() {\n    if (this.initialState) {\n      this.inputText = \"Escreva sua senha...\";\n      this.inputType = \"text\";\n      this.inputStyle = \"color: gray;\";\n      return;\n    }\n    this.inputStyle = \"color: black;\";\n    this.inputType = this.seePassword ? \"text\" : \"password\";\n  }\n  passwordChanged() {\n    this.updateInput();\n    this.valueChanged.emit(this.inputText);\n  }\n  passwordClick() {\n    if (!this.initialState) return;\n    this.initialState = false;\n    this.inputText = \"\";\n    this.updateInput();\n  }\n  passwordFocusout() {\n    if (this.inputText !== \"\") return;\n    this.initialState = true;\n    this.updateInput();\n  }\n};\n__decorate([Output()], PasswordComponent.prototype, \"valueChanged\", void 0);\n__decorate([Input()], PasswordComponent.prototype, \"breakLineOnInput\", void 0);\n__decorate([Input()], PasswordComponent.prototype, \"canSeePassword\", void 0);\n__decorate([Input()], PasswordComponent.prototype, \"seePassword\", void 0);\n__decorate([Output()], PasswordComponent.prototype, \"seePasswordChanged\", void 0);\nPasswordComponent = __decorate([Component({\n  selector: 'app-password',\n  templateUrl: './',\n  styleUrls: ['./password.component.css']\n})], PasswordComponent);","map":{"version":3,"names":["Component","EventEmitter","Input","Output","PasswordComponent","constructor","valueChanged","breakLineOnInput","canSeePassword","seePassword","seePasswordChanged","inputType","inputStyle","inputText","initialState","ngOnInit","updateInput","checkBoxToogle","newValue","emit","passwordChanged","passwordClick","passwordFocusout","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\disrct\\Desktop\\Andr√©\\CSharpAvancado\\Aula 16 (Desafio Angular)\\Front\\src\\app\\password\\password.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './',\n  styleUrls: ['./password.component.css']\n})\nexport class PasswordComponent implements OnInit {\n  @Output() valueChanged = new EventEmitter<string>();\n  @Input() breakLineOnInput = true;\n  @Input() canSeePassword = true;\n  @Input() seePassword = false\n  @Output() seePasswordChanged = new EventEmitter<boolean>();\n  \n  protected inputType = \"text\";\n  protected inputStyle = \"color: black;\"\n  protected inputText = \"\";\n  protected initialState = true;\n  ngOnInit(): void {\n    this.updateInput()\n  }\n  \n  protected checkBoxToogle(newValue: any) {\n    this.updateInput()\n    this.seePasswordChanged.emit(this.seePassword);\n  }\n  protected updateInput() {\n    if (this.initialState) {\n      this.inputText = \"Escreva sua senha...\"\n      this.inputType = \"text\"\n      this.inputStyle = \"color: gray;\"\n      return\n    }\n    this.inputStyle = \"color: black;\"\n    this.inputType = this.seePassword ? \"text\" : \"password\";\n  }\n  protected passwordChanged() {\n    this.updateInput()\n    this.valueChanged.emit(this.inputText)\n  }\n  protected passwordClick() {\n    if (!this.initialState)\n      return\n    this.initialState = false;\n    this.inputText = \"\";\n    this.updateInput();\n  }\n  protected passwordFocusout() {\n    if (this.inputText !== \"\")\n      return\n    this.initialState = true\n    this.updateInput()\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAUC,MAAM,QAAQ,eAAe;AAOvE,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAAvBC,YAAA;IACK,KAAAC,YAAY,GAAG,IAAIL,YAAY,EAAU;IAC1C,KAAAM,gBAAgB,GAAG,IAAI;IACvB,KAAAC,cAAc,GAAG,IAAI;IACrB,KAAAC,WAAW,GAAG,KAAK;IAClB,KAAAC,kBAAkB,GAAG,IAAIT,YAAY,EAAW;IAEhD,KAAAU,SAAS,GAAG,MAAM;IAClB,KAAAC,UAAU,GAAG,eAAe;IAC5B,KAAAC,SAAS,GAAG,EAAE;IACd,KAAAC,YAAY,GAAG,IAAI;EAoC/B;EAnCEC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEUC,cAAcA,CAACC,QAAa;IACpC,IAAI,CAACF,WAAW,EAAE;IAClB,IAAI,CAACN,kBAAkB,CAACS,IAAI,CAAC,IAAI,CAACV,WAAW,CAAC;EAChD;EACUO,WAAWA,CAAA;IACnB,IAAI,IAAI,CAACF,YAAY,EAAE;MACrB,IAAI,CAACD,SAAS,GAAG,sBAAsB;MACvC,IAAI,CAACF,SAAS,GAAG,MAAM;MACvB,IAAI,CAACC,UAAU,GAAG,cAAc;MAChC;;IAEF,IAAI,CAACA,UAAU,GAAG,eAAe;IACjC,IAAI,CAACD,SAAS,GAAG,IAAI,CAACF,WAAW,GAAG,MAAM,GAAG,UAAU;EACzD;EACUW,eAAeA,CAAA;IACvB,IAAI,CAACJ,WAAW,EAAE;IAClB,IAAI,CAACV,YAAY,CAACa,IAAI,CAAC,IAAI,CAACN,SAAS,CAAC;EACxC;EACUQ,aAAaA,CAAA;IACrB,IAAI,CAAC,IAAI,CAACP,YAAY,EACpB;IACF,IAAI,CAACA,YAAY,GAAG,KAAK;IACzB,IAAI,CAACD,SAAS,GAAG,EAAE;IACnB,IAAI,CAACG,WAAW,EAAE;EACpB;EACUM,gBAAgBA,CAAA;IACxB,IAAI,IAAI,CAACT,SAAS,KAAK,EAAE,EACvB;IACF,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACE,WAAW,EAAE;EACpB;CACD;AA7CWO,UAAA,EAATpB,MAAM,EAAE,C,sDAA2C;AAC3CoB,UAAA,EAARrB,KAAK,EAAE,C,0DAAyB;AACxBqB,UAAA,EAARrB,KAAK,EAAE,C,wDAAuB;AACtBqB,UAAA,EAARrB,KAAK,EAAE,C,qDAAoB;AAClBqB,UAAA,EAATpB,MAAM,EAAE,C,4DAAkD;AALhDC,iBAAiB,GAAAmB,UAAA,EAL7BvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,IAAI;EACjBC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWtB,iBAAiB,CA8C7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}