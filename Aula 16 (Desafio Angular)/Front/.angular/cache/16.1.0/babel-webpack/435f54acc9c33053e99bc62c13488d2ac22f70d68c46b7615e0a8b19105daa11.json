{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction PasswordComponent_br_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"br\");\n  }\n}\nfunction PasswordComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p\")(1, \"input\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function PasswordComponent_p_6_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.seePassword = $event);\n    })(\"change\", function PasswordComponent_p_6_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.checkBoxToogle($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵtext(3, \"Mostrar Senha\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.seePassword);\n  }\n}\nexport class PasswordComponent {\n  constructor() {\n    this.valueChanged = new EventEmitter();\n    this.breakLineOnInput = true;\n    this.canSeePassword = true;\n    this.seePassword = false;\n    this.seePasswordChanged = new EventEmitter();\n    this.inputType = \"text\";\n    this.inputStyle = \"color: black;\";\n    this.inputText = \"\";\n    this.initialState = true;\n  }\n  ngOnInit() {\n    this.updateInput();\n  }\n  checkBoxToogle(newValue) {\n    this.updateInput();\n    this.seePasswordChanged.emit(this.seePassword);\n  }\n  updateInput() {\n    if (this.initialState) {\n      this.inputText = \"Escreva sua senha...\";\n      this.inputType = \"text\";\n      this.inputStyle = \"color: gray;\";\n      return;\n    }\n    this.inputStyle = \"color: black;\";\n    this.inputType = this.seePassword ? \"text\" : \"password\";\n  }\n  passwordChanged() {\n    this.updateInput();\n    this.valueChanged.emit(this.inputText);\n  }\n  passwordClick() {\n    if (!this.initialState) return;\n    this.initialState = false;\n    this.inputText = \"\";\n    this.updateInput();\n  }\n  passwordFocusout() {\n    if (this.inputText !== \"\") return;\n    this.initialState = true;\n    this.updateInput();\n  }\n}\nPasswordComponent.ɵfac = function PasswordComponent_Factory(t) {\n  return new (t || PasswordComponent)();\n};\nPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PasswordComponent,\n  selectors: [[\"app-password\"]],\n  inputs: {\n    breakLineOnInput: \"breakLineOnInput\",\n    canSeePassword: \"canSeePassword\",\n    seePassword: \"seePassword\"\n  },\n  outputs: {\n    valueChanged: \"valueChanged\",\n    seePasswordChanged: \"seePasswordChanged\"\n  },\n  decls: 7,\n  vars: 6,\n  consts: [[4, \"ngIf\"], [3, \"type\", \"ngModel\", \"focusout\", \"ngModelChange\", \"keydown\", \"change\", \"click\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\", \"change\"]],\n  template: function PasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"p\")(2, \"label\");\n      i0.ɵɵtext(3, \"Senha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, PasswordComponent_br_4_Template, 1, 0, \"br\", 0);\n      i0.ɵɵelementStart(5, \"input\", 1);\n      i0.ɵɵlistener(\"focusout\", function PasswordComponent_Template_input_focusout_5_listener() {\n        return ctx.passwordFocusout();\n      })(\"ngModelChange\", function PasswordComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.inputText = $event;\n      })(\"keydown\", function PasswordComponent_Template_input_keydown_5_listener() {\n        return ctx.passwordChanged();\n      })(\"change\", function PasswordComponent_Template_input_change_5_listener() {\n        return ctx.passwordChanged();\n      })(\"click\", function PasswordComponent_Template_input_click_5_listener() {\n        return ctx.passwordClick();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, PasswordComponent_p_6_Template, 4, 1, \"p\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.breakLineOnInput);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleMap(ctx.inputStyle);\n      i0.ɵɵpropertyInterpolate(\"type\", ctx.inputType);\n      i0.ɵɵproperty(\"ngModel\", ctx.inputText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.canSeePassword);\n    }\n  },\n  dependencies: [i1.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","PasswordComponent_p_6_Template_input_ngModelChange_1_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","seePassword","PasswordComponent_p_6_Template_input_change_1_listener","ctx_r4","checkBoxToogle","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ctx_r1","PasswordComponent","constructor","valueChanged","breakLineOnInput","canSeePassword","seePasswordChanged","inputType","inputStyle","inputText","initialState","ngOnInit","updateInput","newValue","emit","passwordChanged","passwordClick","passwordFocusout","selectors","inputs","outputs","decls","vars","consts","template","PasswordComponent_Template","rf","ctx","ɵɵtemplate","PasswordComponent_br_4_Template","PasswordComponent_Template_input_focusout_5_listener","PasswordComponent_Template_input_ngModelChange_5_listener","PasswordComponent_Template_input_keydown_5_listener","PasswordComponent_Template_input_change_5_listener","PasswordComponent_Template_input_click_5_listener","PasswordComponent_p_6_Template","ɵɵstyleMap","ɵɵpropertyInterpolate"],"sources":["C:\\Users\\disrct\\Desktop\\André\\CSharpAvancado\\Aula 16 (Desafio Angular)\\Front\\src\\app\\password\\password.component.ts","C:\\Users\\disrct\\Desktop\\André\\CSharpAvancado\\Aula 16 (Desafio Angular)\\Front\\src\\app\\password\\password.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.css']\n  '.'\n})\nexport class PasswordComponent implements OnInit {\n  @Output() valueChanged = new EventEmitter<string>();\n  @Input() breakLineOnInput = true;\n  @Input() canSeePassword = true;\n  @Input() seePassword = false\n  @Output() seePasswordChanged = new EventEmitter<boolean>();\n  \n  protected inputType = \"text\";\n  protected inputStyle = \"color: black;\"\n  protected inputText = \"\";\n  protected initialState = true;\n  ngOnInit(): void {\n    this.updateInput()\n  }\n  \n  protected checkBoxToogle(newValue: any) {\n    this.updateInput()\n    this.seePasswordChanged.emit(this.seePassword);\n  }\n  protected updateInput() {\n    if (this.initialState) {\n      this.inputText = \"Escreva sua senha...\"\n      this.inputType = \"text\"\n      this.inputStyle = \"color: gray;\"\n      return\n    }\n    this.inputStyle = \"color: black;\"\n    this.inputType = this.seePassword ? \"text\" : \"password\";\n  }\n  protected passwordChanged() {\n    this.updateInput()\n    this.valueChanged.emit(this.inputText)\n  }\n  protected passwordClick() {\n    if (!this.initialState)\n      return\n    this.initialState = false;\n    this.inputText = \"\";\n    this.updateInput();\n  }\n  protected passwordFocusout() {\n    if (this.inputText !== \"\")\n      return\n    this.initialState = true\n    this.updateInput()\n  }\n}","<div>\n    \n    <p>\n        <label>Senha</label>\n        <br *ngIf=\"breakLineOnInput\">\n        <input type={{inputType}} [style]=inputStyle (focusout)=\"passwordFocusout()\" [(ngModel)]=\"inputText\"\n            (keydown)=\"passwordChanged()\" (change)=\"passwordChanged()\" (click)=\"passwordClick()\">\n    </p>\n\n    <p *ngIf=\"canSeePassword\">\n        <input type=\"checkbox\" [(ngModel)]=\"seePassword\" (change)=\"checkBoxToogle($event)\">\n        <label>Mostrar Senha</label>\n    </p>\n\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}